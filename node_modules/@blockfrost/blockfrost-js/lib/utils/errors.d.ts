import { ErrorType } from '../types';
export declare class SignatureVerificationError extends Error {
    detail: {
        webhookPayload: unknown;
        signatureHeader: string;
    } | undefined;
    constructor(message: string, detail?: {
        signatureHeader: string;
        webhookPayload: unknown;
    });
}
export declare class BlockfrostServerError extends Error {
    status_code: number;
    error: string;
    url: string;
    body: unknown;
    constructor(error: Extract<ErrorType, {
        status_code: number;
    }>);
}
export declare class BlockfrostClientError extends Error {
    code: string;
    url: string | undefined;
    constructor(error: Extract<ErrorType, {
        code: string;
    }>);
}
export declare const isBlockfrostErrorResponse: (data: unknown) => data is {
    status_code: number;
    message: string;
    error: string;
    url: string;
    body?: unknown;
};
export declare const handleError: (error: unknown) => BlockfrostServerError | BlockfrostClientError;
