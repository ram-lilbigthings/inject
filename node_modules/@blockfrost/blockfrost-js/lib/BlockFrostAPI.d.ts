import { Got } from 'got';
import Bottleneck from 'bottleneck';
import { accounts, accountsDelegations, accountsDelegationsAll, accountsRegistrations, accountsRegistrationsAll, accountsRewards, accountsRewardsAll, accountsHistory, accountsHistoryAll, accountsWithdrawals, accountsWithdrawalsAll, accountsMirs, accountsMirsAll, accountsAddresses, accountsAddressesAll, accountsAddressesAssets, accountsAddressesTotal, accountsAddressesAssetsAll } from './endpoints/api/accounts';
import { addresses, addressesTotal, addressesExtended, addressesTransactions, addressesTransactionsAll, addressesUtxos, addressesUtxosAll, addressesUtxosAsset, addressesUtxosAssetAll } from './endpoints/api/addresses';
import { assets, assetsById, assetsHistory, assetsHistoryAll, assetsTransactions, assetsAddresses, assetsPolicyById, assetsPolicyByIdAll } from './endpoints/api/assets';
import { blocks, blocksLatest, blocksLatestTxs, blocksLatestTxsAll, blocksNext, blocksPrevious, blocksTxs, blocksTxsAll, blocksAddresses, blocksAddressesAll } from './endpoints/api/blocks';
import { epochs, epochsBlocks, epochsBlocksAll, epochsBlocksByPoolId, epochsBlocksByPoolIdAll, epochsLatest, epochsNext, epochsParameters, epochsLatestParameters, epochsPrevious, epochsStakes, epochsStakesAll, epochsStakesByPoolId, epochsStakesByPoolIdAll } from './endpoints/api/epochs';
import { pools, poolsAll, poolMetadata, poolsById, poolsByIdBlocks, poolsByIdDelegators, poolsByIdHistory, poolsByIdRelays, poolsByIdUpdates, poolsRetired, poolsRetiring, poolsExtended, poolsExtendedAll } from './endpoints/api/pools';
import { genesis } from './endpoints/api/ledger';
import { root } from './endpoints/api/root';
import { metadataTxsLabel, metadataTxsLabelCbor, metadataTxsLabels } from './endpoints/api/metadata';
import { mempool, mempoolAll, mempoolTx, mempoolByAddress, mempoolByAddressAll } from './endpoints/api/mempool';
import { health, healthClock } from './endpoints/api/health';
import { metrics, metricsEndpoints } from './endpoints/api/metrics';
import { txs, txsDelegations, txsMetadataCbor, txsPoolRetires, txsPoolUpdates, txsStakes, txsUtxos, txsWithdrawals, txsMirs, txsMetadata, txsRedeemers, txSubmit } from './endpoints/api/txs';
import { scripts, scriptsByHash, scriptsDatum, scriptsDatumCbor, scriptsRedeemers, scriptsJson, scriptsCbor } from './endpoints/api/scripts';
import { nutlinkAddress, nutlinkAddressTicker, nutlinkAddressTickers, nutlinkAddressTickersAll, nutlinkAddressTickerAll, nutlinkTickers, nutlinkTickersAll } from './endpoints/api/nutlink';
import { network } from './endpoints/api/network';
import { utilsTxsEvaluate, utilsTxsEvaluateUtxos } from './endpoints/api/utils/txs';
import { Options, ValidatedOptions } from './types';
declare class BlockFrostAPI {
    apiUrl: string;
    /** @ignore */
    projectId?: string;
    /** @ignore */
    userAgent?: string;
    /** @ignore */
    options: ValidatedOptions;
    /** @ignore */
    instance: Got;
    /** @ignore */
    rateLimiter: Bottleneck | undefined;
    constructor(options?: Options);
    accounts: typeof accounts;
    accountsDelegations: typeof accountsDelegations;
    accountsDelegationsAll: typeof accountsDelegationsAll;
    accountsRegistrations: typeof accountsRegistrations;
    accountsRegistrationsAll: typeof accountsRegistrationsAll;
    accountsRewards: typeof accountsRewards;
    accountsRewardsAll: typeof accountsRewardsAll;
    accountsHistory: typeof accountsHistory;
    accountsHistoryAll: typeof accountsHistoryAll;
    accountsWithdrawals: typeof accountsWithdrawals;
    accountsWithdrawalsAll: typeof accountsWithdrawalsAll;
    accountsMirs: typeof accountsMirs;
    accountsMirsAll: typeof accountsMirsAll;
    accountsAddresses: typeof accountsAddresses;
    accountsAddressesAll: typeof accountsAddressesAll;
    accountsAddressesAssets: typeof accountsAddressesAssets;
    accountsAddressesAssetsAll: typeof accountsAddressesAssetsAll;
    accountsAddressesTotal: typeof accountsAddressesTotal;
    assets: typeof assets;
    assetsById: typeof assetsById;
    assetsHistory: typeof assetsHistory;
    assetsHistoryAll: typeof assetsHistoryAll;
    assetsTransactions: typeof assetsTransactions;
    assetsAddresses: typeof assetsAddresses;
    assetsPolicyById: typeof assetsPolicyById;
    assetsPolicyByIdAll: typeof assetsPolicyByIdAll;
    addresses: typeof addresses;
    addressesTotal: typeof addressesTotal;
    addressesExtended: typeof addressesExtended;
    addressesTransactions: typeof addressesTransactions;
    addressesTransactionsAll: typeof addressesTransactionsAll;
    addressesUtxos: typeof addressesUtxos;
    addressesUtxosAll: typeof addressesUtxosAll;
    addressesUtxosAsset: typeof addressesUtxosAsset;
    addressesUtxosAssetAll: typeof addressesUtxosAssetAll;
    blocks: typeof blocks;
    blocksLatest: typeof blocksLatest;
    blocksLatestTxs: typeof blocksLatestTxs;
    blocksLatestTxsAll: typeof blocksLatestTxsAll;
    blocksNext: typeof blocksNext;
    blocksPrevious: typeof blocksPrevious;
    blocksTxs: typeof blocksTxs;
    blocksTxsAll: typeof blocksTxsAll;
    blocksAddresses: typeof blocksAddresses;
    blocksAddressesAll: typeof blocksAddressesAll;
    epochs: typeof epochs;
    epochsBlocks: typeof epochsBlocks;
    epochsBlocksAll: typeof epochsBlocksAll;
    epochsBlocksByPoolId: typeof epochsBlocksByPoolId;
    epochsBlocksByPoolIdAll: typeof epochsBlocksByPoolIdAll;
    epochsLatest: typeof epochsLatest;
    epochsNext: typeof epochsNext;
    epochsParameters: typeof epochsParameters;
    epochsLatestParameters: typeof epochsLatestParameters;
    epochsPrevious: typeof epochsPrevious;
    epochsStakes: typeof epochsStakes;
    epochsStakesAll: typeof epochsStakesAll;
    epochsStakesByPoolId: typeof epochsStakesByPoolId;
    epochsStakesByPoolIdAll: typeof epochsStakesByPoolIdAll;
    health: typeof health;
    healthClock: typeof healthClock;
    genesis: typeof genesis;
    mempool: typeof mempool;
    mempoolAll: typeof mempoolAll;
    mempoolTx: typeof mempoolTx;
    metadataTxsLabel: typeof metadataTxsLabel;
    metadataTxsLabelCbor: typeof metadataTxsLabelCbor;
    metadataTxsLabels: typeof metadataTxsLabels;
    mempoolByAddress: typeof mempoolByAddress;
    mempoolByAddressAll: typeof mempoolByAddressAll;
    metrics: typeof metrics;
    metricsEndpoints: typeof metricsEndpoints;
    nutlinkAddress: typeof nutlinkAddress;
    nutlinkAddressTicker: typeof nutlinkAddressTicker;
    nutlinkAddressTickers: typeof nutlinkAddressTickers;
    nutlinkAddressTickersAll: typeof nutlinkAddressTickersAll;
    nutlinkAddressTickerAll: typeof nutlinkAddressTickerAll;
    nutlinkTickers: typeof nutlinkTickers;
    nutlinkTickersAll: typeof nutlinkTickersAll;
    pools: typeof pools;
    poolsAll: typeof poolsAll;
    poolMetadata: typeof poolMetadata;
    poolsById: typeof poolsById;
    poolsByIdBlocks: typeof poolsByIdBlocks;
    poolsByIdDelegators: typeof poolsByIdDelegators;
    poolsByIdHistory: typeof poolsByIdHistory;
    poolsByIdRelays: typeof poolsByIdRelays;
    poolsByIdUpdates: typeof poolsByIdUpdates;
    poolsRetired: typeof poolsRetired;
    poolsRetiring: typeof poolsRetiring;
    poolsExtended: typeof poolsExtended;
    poolsExtendedAll: typeof poolsExtendedAll;
    root: typeof root;
    scripts: typeof scripts;
    scriptsByHash: typeof scriptsByHash;
    scriptsJson: typeof scriptsJson;
    scriptsCbor: typeof scriptsCbor;
    scriptsDatum: typeof scriptsDatum;
    scriptsDatumCbor: typeof scriptsDatumCbor;
    scriptsRedeemers: typeof scriptsRedeemers;
    txs: typeof txs;
    txsMetadataCbor: typeof txsMetadataCbor;
    txsDelegations: typeof txsDelegations;
    txsPoolRetires: typeof txsPoolRetires;
    txsPoolUpdates: typeof txsPoolUpdates;
    txsStakes: typeof txsStakes;
    txsUtxos: typeof txsUtxos;
    txsWithdrawals: typeof txsWithdrawals;
    txsMirs: typeof txsMirs;
    txsMetadata: typeof txsMetadata;
    txsRedeemers: typeof txsRedeemers;
    txSubmit: typeof txSubmit;
    network: typeof network;
    utilsTxsEvaluate: typeof utilsTxsEvaluate;
    utilsTxsEvaluateUtxos: typeof utilsTxsEvaluateUtxos;
}
export { BlockFrostAPI };
